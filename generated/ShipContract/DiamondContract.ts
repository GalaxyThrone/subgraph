// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class GENESIS extends ethereum.Event {
  get params(): GENESIS__Params {
    return new GENESIS__Params(this);
  }
}

export class GENESIS__Params {
  _event: GENESIS;

  constructor(event: GENESIS) {
    this._event = event;
  }
}

export class allianceCreated extends ethereum.Event {
  get params(): allianceCreated__Params {
    return new allianceCreated__Params(this);
  }
}

export class allianceCreated__Params {
  _event: allianceCreated;

  constructor(event: allianceCreated) {
    this._event = event;
  }

  get allianceName(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get allianceCreator(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class changedAllianceOwner extends ethereum.Event {
  get params(): changedAllianceOwner__Params {
    return new changedAllianceOwner__Params(this);
  }
}

export class changedAllianceOwner__Params {
  _event: changedAllianceOwner;

  constructor(event: changedAllianceOwner) {
    this._event = event;
  }

  get allianceName(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class invitedToAlliance extends ethereum.Event {
  get params(): invitedToAlliance__Params {
    return new invitedToAlliance__Params(this);
  }
}

export class invitedToAlliance__Params {
  _event: invitedToAlliance;

  constructor(event: invitedToAlliance) {
    this._event = event;
  }

  get allianceName(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get playerAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class joinedAlliance extends ethereum.Event {
  get params(): joinedAlliance__Params {
    return new joinedAlliance__Params(this);
  }
}

export class joinedAlliance__Params {
  _event: joinedAlliance;

  constructor(event: joinedAlliance) {
    this._event = event;
  }

  get allianceName(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get playerAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class leavingAlliance extends ethereum.Event {
  get params(): leavingAlliance__Params {
    return new leavingAlliance__Params(this);
  }
}

export class leavingAlliance__Params {
  _event: leavingAlliance;

  constructor(event: leavingAlliance) {
    this._event = event;
  }

  get allianceName(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get playerAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get timestamp(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class buildingsFinishedCrafting extends ethereum.Event {
  get params(): buildingsFinishedCrafting__Params {
    return new buildingsFinishedCrafting__Params(this);
  }
}

export class buildingsFinishedCrafting__Params {
  _event: buildingsFinishedCrafting;

  constructor(event: buildingsFinishedCrafting) {
    this._event = event;
  }

  get planetId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class buildingsStartedCrafting extends ethereum.Event {
  get params(): buildingsStartedCrafting__Params {
    return new buildingsStartedCrafting__Params(this);
  }
}

export class buildingsStartedCrafting__Params {
  _event: buildingsStartedCrafting;

  constructor(event: buildingsStartedCrafting) {
    this._event = event;
  }

  get planetId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class miningConcluded extends ethereum.Event {
  get params(): miningConcluded__Params {
    return new miningConcluded__Params(this);
  }
}

export class miningConcluded__Params {
  _event: miningConcluded;

  constructor(event: miningConcluded) {
    this._event = event;
  }

  get planetId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class DiamondCut extends ethereum.Event {
  get params(): DiamondCut__Params {
    return new DiamondCut__Params(this);
  }
}

export class DiamondCut__Params {
  _event: DiamondCut;

  constructor(event: DiamondCut) {
    this._event = event;
  }

  get _diamondCut(): Array<DiamondCut_diamondCutStruct> {
    return this._event.parameters[0].value.toTupleArray<
      DiamondCut_diamondCutStruct
    >();
  }

  get _init(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _calldata(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class DiamondCut_diamondCutStruct extends ethereum.Tuple {
  get facetAddress(): Address {
    return this[0].toAddress();
  }

  get action(): i32 {
    return this[1].toI32();
  }

  get functionSelectors(): Array<Bytes> {
    return this[2].toBytesArray();
  }
}

export class AttackSent extends ethereum.Event {
  get params(): AttackSent__Params {
    return new AttackSent__Params(this);
  }
}

export class AttackSent__Params {
  _event: AttackSent;

  constructor(event: AttackSent) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get toPlanet(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get fromPlayer(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class attackLost extends ethereum.Event {
  get params(): attackLost__Params {
    return new attackLost__Params(this);
  }
}

export class attackLost__Params {
  _event: attackLost;

  constructor(event: attackLost) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get attackedPlanet(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get Attacker(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class planetConquered extends ethereum.Event {
  get params(): planetConquered__Params {
    return new planetConquered__Params(this);
  }
}

export class planetConquered__Params {
  _event: planetConquered;

  constructor(event: planetConquered) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get oldOwner(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[3].value.toAddress();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class playerRegistered extends ethereum.Event {
  get params(): playerRegistered__Params {
    return new playerRegistered__Params(this);
  }
}

export class playerRegistered__Params {
  _event: playerRegistered;

  constructor(event: playerRegistered) {
    this._event = event;
  }

  get playerAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get faction(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class SendTerraformer extends ethereum.Event {
  get params(): SendTerraformer__Params {
    return new SendTerraformer__Params(this);
  }
}

export class SendTerraformer__Params {
  _event: SendTerraformer;

  constructor(event: SendTerraformer) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get toPlanet(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get arrivalTime(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get instanceId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class StartOutMining extends ethereum.Event {
  get params(): StartOutMining__Params {
    return new StartOutMining__Params(this);
  }
}

export class StartOutMining__Params {
  _event: StartOutMining;

  constructor(event: StartOutMining) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get fromPlanetId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get toPlanetId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get sender(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get shipsIds(): Array<BigInt> {
    return this._event.parameters[4].value.toBigIntArray();
  }

  get arrivalTime(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }
}

export class StartSendResources extends ethereum.Event {
  get params(): StartSendResources__Params {
    return new StartSendResources__Params(this);
  }
}

export class StartSendResources__Params {
  _event: StartSendResources;

  constructor(event: StartSendResources) {
    this._event = event;
  }

  get fromPlanetId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get toPlanetId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get shipsIds(): Array<BigInt> {
    return this._event.parameters[3].value.toBigIntArray();
  }

  get arrivalTime(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class resolvedOutmining extends ethereum.Event {
  get params(): resolvedOutmining__Params {
    return new resolvedOutmining__Params(this);
  }
}

export class resolvedOutmining__Params {
  _event: resolvedOutmining;

  constructor(event: resolvedOutmining) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class resolvedTerraforming extends ethereum.Event {
  get params(): resolvedTerraforming__Params {
    return new resolvedTerraforming__Params(this);
  }
}

export class resolvedTerraforming__Params {
  _event: resolvedTerraforming;

  constructor(event: resolvedTerraforming) {
    this._event = event;
  }

  get id(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class shipsFinishedCrafting extends ethereum.Event {
  get params(): shipsFinishedCrafting__Params {
    return new shipsFinishedCrafting__Params(this);
  }
}

export class shipsFinishedCrafting__Params {
  _event: shipsFinishedCrafting;

  constructor(event: shipsFinishedCrafting) {
    this._event = event;
  }

  get planetId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class shipsStartedCrafting extends ethereum.Event {
  get params(): shipsStartedCrafting__Params {
    return new shipsStartedCrafting__Params(this);
  }
}

export class shipsStartedCrafting__Params {
  _event: shipsStartedCrafting;

  constructor(event: shipsStartedCrafting) {
    this._event = event;
  }

  get planetId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class DiamondCut1 extends ethereum.Event {
  get params(): DiamondCut1__Params {
    return new DiamondCut1__Params(this);
  }
}

export class DiamondCut1__Params {
  _event: DiamondCut1;

  constructor(event: DiamondCut1) {
    this._event = event;
  }

  get _diamondCut(): Array<DiamondCut1_diamondCutStruct> {
    return this._event.parameters[0].value.toTupleArray<
      DiamondCut1_diamondCutStruct
    >();
  }

  get _init(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _calldata(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class DiamondCut1_diamondCutStruct extends ethereum.Tuple {
  get facetAddress(): Address {
    return this[0].toAddress();
  }

  get action(): i32 {
    return this[1].toI32();
  }

  get functionSelectors(): Array<Bytes> {
    return this[2].toBytesArray();
  }
}

export class OwnershipTransferred1 extends ethereum.Event {
  get params(): OwnershipTransferred1__Params {
    return new OwnershipTransferred1__Params(this);
  }
}

export class OwnershipTransferred1__Params {
  _event: OwnershipTransferred1;

  constructor(event: OwnershipTransferred1) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class DiamondCut2 extends ethereum.Event {
  get params(): DiamondCut2__Params {
    return new DiamondCut2__Params(this);
  }
}

export class DiamondCut2__Params {
  _event: DiamondCut2;

  constructor(event: DiamondCut2) {
    this._event = event;
  }

  get _diamondCut(): Array<DiamondCut2_diamondCutStruct> {
    return this._event.parameters[0].value.toTupleArray<
      DiamondCut2_diamondCutStruct
    >();
  }

  get _init(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _calldata(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class DiamondCut2_diamondCutStruct extends ethereum.Tuple {
  get facetAddress(): Address {
    return this[0].toAddress();
  }

  get action(): i32 {
    return this[1].toI32();
  }

  get functionSelectors(): Array<Bytes> {
    return this[2].toBytesArray();
  }
}

export class OwnershipTransferred2 extends ethereum.Event {
  get params(): OwnershipTransferred2__Params {
    return new OwnershipTransferred2__Params(this);
  }
}

export class OwnershipTransferred2__Params {
  _event: OwnershipTransferred2;

  constructor(event: OwnershipTransferred2) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class DiamondContract__checkUpkeepResult {
  value0: boolean;
  value1: Bytes;

  constructor(value0: boolean, value1: Bytes) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromBytes(this.value1));
    return map;
  }

  getUpkeepNeeded(): boolean {
    return this.value0;
  }

  getValue1(): Bytes {
    return this.value1;
  }
}

export class DiamondContract__getAllCraftBuildingsPlayerResultValue0Struct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get planetId(): BigInt {
    return this[1].toBigInt();
  }

  get itemId(): BigInt {
    return this[2].toBigInt();
  }

  get readyTimestamp(): BigInt {
    return this[3].toBigInt();
  }

  get startTimestamp(): BigInt {
    return this[4].toBigInt();
  }

  get unclaimedAmount(): BigInt {
    return this[5].toBigInt();
  }

  get craftTimeItem(): BigInt {
    return this[6].toBigInt();
  }
}

export class DiamondContract__getBuildingTypeResultValue0Struct extends ethereum.Tuple {
  get price(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get boosts(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get defenseTypes(): Array<BigInt> {
    return this[2].toBigIntArray();
  }

  get health(): BigInt {
    return this[3].toBigInt();
  }

  get craftTime(): BigInt {
    return this[4].toBigInt();
  }

  get name(): string {
    return this[5].toString();
  }
}

export class DiamondContract__getBuildingTypesResultValue0Struct extends ethereum.Tuple {
  get price(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get boosts(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get defenseTypes(): Array<BigInt> {
    return this[2].toBigIntArray();
  }

  get health(): BigInt {
    return this[3].toBigInt();
  }

  get craftTime(): BigInt {
    return this[4].toBigInt();
  }

  get name(): string {
    return this[5].toString();
  }
}

export class DiamondContract__getCraftBuildingsResultValue0Struct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get planetId(): BigInt {
    return this[1].toBigInt();
  }

  get itemId(): BigInt {
    return this[2].toBigInt();
  }

  get readyTimestamp(): BigInt {
    return this[3].toBigInt();
  }

  get startTimestamp(): BigInt {
    return this[4].toBigInt();
  }

  get unclaimedAmount(): BigInt {
    return this[5].toBigInt();
  }

  get craftTimeItem(): BigInt {
    return this[6].toBigInt();
  }
}

export class DiamondContract__facetsResultFacets_Struct extends ethereum.Tuple {
  get facetAddress(): Address {
    return this[0].toAddress();
  }

  get functionSelectors(): Array<Bytes> {
    return this[1].toBytesArray();
  }
}

export class DiamondContract__getAllIncomingAttacksPlanetResultValue0Struct extends ethereum.Tuple {
  get attackStarted(): BigInt {
    return this[0].toBigInt();
  }

  get distance(): BigInt {
    return this[1].toBigInt();
  }

  get timeToBeResolved(): BigInt {
    return this[2].toBigInt();
  }

  get fromPlanet(): BigInt {
    return this[3].toBigInt();
  }

  get toPlanet(): BigInt {
    return this[4].toBigInt();
  }

  get attackerShipsIds(): Array<BigInt> {
    return this[5].toBigIntArray();
  }

  get attacker(): Address {
    return this[6].toAddress();
  }

  get attackInstanceId(): BigInt {
    return this[7].toBigInt();
  }

  get attackSeed(): Array<BigInt> {
    return this[8].toBigIntArray();
  }
}

export class DiamondContract__getAllIncomingAttacksPlayerResultValue0Struct extends ethereum.Tuple {
  get attackStarted(): BigInt {
    return this[0].toBigInt();
  }

  get distance(): BigInt {
    return this[1].toBigInt();
  }

  get timeToBeResolved(): BigInt {
    return this[2].toBigInt();
  }

  get fromPlanet(): BigInt {
    return this[3].toBigInt();
  }

  get toPlanet(): BigInt {
    return this[4].toBigInt();
  }

  get attackerShipsIds(): Array<BigInt> {
    return this[5].toBigIntArray();
  }

  get attacker(): Address {
    return this[6].toAddress();
  }

  get attackInstanceId(): BigInt {
    return this[7].toBigInt();
  }

  get attackSeed(): Array<BigInt> {
    return this[8].toBigIntArray();
  }
}

export class DiamondContract__getAllOutgoingAttacksResultValue0Struct extends ethereum.Tuple {
  get attackStarted(): BigInt {
    return this[0].toBigInt();
  }

  get distance(): BigInt {
    return this[1].toBigInt();
  }

  get timeToBeResolved(): BigInt {
    return this[2].toBigInt();
  }

  get fromPlanet(): BigInt {
    return this[3].toBigInt();
  }

  get toPlanet(): BigInt {
    return this[4].toBigInt();
  }

  get attackerShipsIds(): Array<BigInt> {
    return this[5].toBigIntArray();
  }

  get attacker(): Address {
    return this[6].toAddress();
  }

  get attackInstanceId(): BigInt {
    return this[7].toBigInt();
  }

  get attackSeed(): Array<BigInt> {
    return this[8].toBigIntArray();
  }
}

export class DiamondContract__getAttackStatusResultValue0Struct extends ethereum.Tuple {
  get attackStarted(): BigInt {
    return this[0].toBigInt();
  }

  get distance(): BigInt {
    return this[1].toBigInt();
  }

  get timeToBeResolved(): BigInt {
    return this[2].toBigInt();
  }

  get fromPlanet(): BigInt {
    return this[3].toBigInt();
  }

  get toPlanet(): BigInt {
    return this[4].toBigInt();
  }

  get attackerShipsIds(): Array<BigInt> {
    return this[5].toBigIntArray();
  }

  get attacker(): Address {
    return this[6].toAddress();
  }

  get attackInstanceId(): BigInt {
    return this[7].toBigInt();
  }

  get attackSeed(): Array<BigInt> {
    return this[8].toBigIntArray();
  }
}

export class DiamondContract__getMultipleRunningAttacksResultValue0Struct extends ethereum.Tuple {
  get attackStarted(): BigInt {
    return this[0].toBigInt();
  }

  get distance(): BigInt {
    return this[1].toBigInt();
  }

  get timeToBeResolved(): BigInt {
    return this[2].toBigInt();
  }

  get fromPlanet(): BigInt {
    return this[3].toBigInt();
  }

  get toPlanet(): BigInt {
    return this[4].toBigInt();
  }

  get attackerShipsIds(): Array<BigInt> {
    return this[5].toBigIntArray();
  }

  get attacker(): Address {
    return this[6].toAddress();
  }

  get attackInstanceId(): BigInt {
    return this[7].toBigInt();
  }

  get attackSeed(): Array<BigInt> {
    return this[8].toBigIntArray();
  }
}

export class DiamondContract__getAllCraftShipsPlayerResultValue0Struct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get planetId(): BigInt {
    return this[1].toBigInt();
  }

  get itemId(): BigInt {
    return this[2].toBigInt();
  }

  get readyTimestamp(): BigInt {
    return this[3].toBigInt();
  }

  get startTimestamp(): BigInt {
    return this[4].toBigInt();
  }

  get unclaimedAmount(): BigInt {
    return this[5].toBigInt();
  }

  get craftTimeItem(): BigInt {
    return this[6].toBigInt();
  }
}

export class DiamondContract__getAllOutMiningPlanetResultValue0Struct extends ethereum.Tuple {
  get instanceId(): BigInt {
    return this[0].toBigInt();
  }

  get fromPlanetId(): BigInt {
    return this[1].toBigInt();
  }

  get toPlanetId(): BigInt {
    return this[2].toBigInt();
  }

  get shipsIds(): Array<BigInt> {
    return this[3].toBigIntArray();
  }

  get timestamp(): BigInt {
    return this[4].toBigInt();
  }

  get arrivalTime(): BigInt {
    return this[5].toBigInt();
  }
}

export class DiamondContract__getAllOutMiningPlayerResultValue0Struct extends ethereum.Tuple {
  get instanceId(): BigInt {
    return this[0].toBigInt();
  }

  get fromPlanetId(): BigInt {
    return this[1].toBigInt();
  }

  get toPlanetId(): BigInt {
    return this[2].toBigInt();
  }

  get shipsIds(): Array<BigInt> {
    return this[3].toBigIntArray();
  }

  get timestamp(): BigInt {
    return this[4].toBigInt();
  }

  get arrivalTime(): BigInt {
    return this[5].toBigInt();
  }
}

export class DiamondContract__getAllSendResourcesResultValue0Struct extends ethereum.Tuple {
  get fromPlanetId(): BigInt {
    return this[0].toBigInt();
  }

  get toPlanetId(): BigInt {
    return this[1].toBigInt();
  }

  get shipsIds(): Array<BigInt> {
    return this[2].toBigIntArray();
  }

  get timestamp(): BigInt {
    return this[3].toBigInt();
  }

  get arrivalTime(): BigInt {
    return this[4].toBigInt();
  }

  get sentResources(): Array<BigInt> {
    return this[5].toBigIntArray();
  }
}

export class DiamondContract__getAllTerraformingPlayerResultValue0Struct extends ethereum.Tuple {
  get instanceId(): BigInt {
    return this[0].toBigInt();
  }

  get fromPlanetId(): BigInt {
    return this[1].toBigInt();
  }

  get toPlanetId(): BigInt {
    return this[2].toBigInt();
  }

  get shipsIds(): Array<BigInt> {
    return this[3].toBigIntArray();
  }

  get timestamp(): BigInt {
    return this[4].toBigInt();
  }

  get arrivalTime(): BigInt {
    return this[5].toBigInt();
  }
}

export class DiamondContract__getCraftFleetsResultValue0Struct extends ethereum.Tuple {
  get amount(): BigInt {
    return this[0].toBigInt();
  }

  get planetId(): BigInt {
    return this[1].toBigInt();
  }

  get itemId(): BigInt {
    return this[2].toBigInt();
  }

  get readyTimestamp(): BigInt {
    return this[3].toBigInt();
  }

  get startTimestamp(): BigInt {
    return this[4].toBigInt();
  }

  get unclaimedAmount(): BigInt {
    return this[5].toBigInt();
  }

  get craftTimeItem(): BigInt {
    return this[6].toBigInt();
  }
}

export class DiamondContract__getDefensePlanetDetailedResultValue1Struct extends ethereum.Tuple {
  get shipType(): BigInt {
    return this[0].toBigInt();
  }

  get price(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get attack(): BigInt {
    return this[2].toBigInt();
  }

  get attackTypes(): Array<BigInt> {
    return this[3].toBigIntArray();
  }

  get defenseTypes(): Array<BigInt> {
    return this[4].toBigIntArray();
  }

  get health(): BigInt {
    return this[5].toBigInt();
  }

  get cargo(): BigInt {
    return this[6].toBigInt();
  }

  get craftTime(): BigInt {
    return this[7].toBigInt();
  }

  get craftedFrom(): BigInt {
    return this[8].toBigInt();
  }

  get name(): string {
    return this[9].toString();
  }

  get moduleSlots(): BigInt {
    return this[10].toBigInt();
  }
}

export class DiamondContract__getDefensePlanetDetailedResult {
  value0: Array<BigInt>;
  value1: Array<DiamondContract__getDefensePlanetDetailedResultValue1Struct>;

  constructor(
    value0: Array<BigInt>,
    value1: Array<DiamondContract__getDefensePlanetDetailedResultValue1Struct>
  ) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigIntArray(this.value0));
    map.set("value1", ethereum.Value.fromTupleArray(this.value1));
    return map;
  }

  getValue0(): Array<BigInt> {
    return this.value0;
  }

  getValue1(): Array<
    DiamondContract__getDefensePlanetDetailedResultValue1Struct
  > {
    return this.value1;
  }
}

export class DiamondContract__getShipStatsDiamondResultValue0Struct extends ethereum.Tuple {
  get shipType(): BigInt {
    return this[0].toBigInt();
  }

  get price(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get attack(): BigInt {
    return this[2].toBigInt();
  }

  get attackTypes(): Array<BigInt> {
    return this[3].toBigIntArray();
  }

  get defenseTypes(): Array<BigInt> {
    return this[4].toBigIntArray();
  }

  get health(): BigInt {
    return this[5].toBigInt();
  }

  get cargo(): BigInt {
    return this[6].toBigInt();
  }

  get craftTime(): BigInt {
    return this[7].toBigInt();
  }

  get craftedFrom(): BigInt {
    return this[8].toBigInt();
  }

  get name(): string {
    return this[9].toString();
  }

  get moduleSlots(): BigInt {
    return this[10].toBigInt();
  }
}

export class DiamondContract__getShipTypeStatsResultValue0Struct extends ethereum.Tuple {
  get shipType(): BigInt {
    return this[0].toBigInt();
  }

  get price(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get attack(): BigInt {
    return this[2].toBigInt();
  }

  get attackTypes(): Array<BigInt> {
    return this[3].toBigIntArray();
  }

  get defenseTypes(): Array<BigInt> {
    return this[4].toBigIntArray();
  }

  get health(): BigInt {
    return this[5].toBigInt();
  }

  get cargo(): BigInt {
    return this[6].toBigInt();
  }

  get craftTime(): BigInt {
    return this[7].toBigInt();
  }

  get craftedFrom(): BigInt {
    return this[8].toBigInt();
  }

  get name(): string {
    return this[9].toString();
  }

  get moduleSlots(): BigInt {
    return this[10].toBigInt();
  }
}

export class DiamondContract__returnEquippedModuleSlotsResultValue0Struct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get attackBoostStat(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get defenseBoostStat(): Array<BigInt> {
    return this[2].toBigIntArray();
  }

  get healthBoostStat(): BigInt {
    return this[3].toBigInt();
  }

  get price(): Array<BigInt> {
    return this[4].toBigIntArray();
  }
}

export class DiamondContract__showIncomingTerraformersPlanetResultValue0Struct extends ethereum.Tuple {
  get instanceId(): BigInt {
    return this[0].toBigInt();
  }

  get fromPlanetId(): BigInt {
    return this[1].toBigInt();
  }

  get toPlanetId(): BigInt {
    return this[2].toBigInt();
  }

  get shipsIds(): Array<BigInt> {
    return this[3].toBigIntArray();
  }

  get timestamp(): BigInt {
    return this[4].toBigInt();
  }

  get arrivalTime(): BigInt {
    return this[5].toBigInt();
  }
}

export class DiamondContract__showOutminingInstanceResultValue0Struct extends ethereum.Tuple {
  get instanceId(): BigInt {
    return this[0].toBigInt();
  }

  get fromPlanetId(): BigInt {
    return this[1].toBigInt();
  }

  get toPlanetId(): BigInt {
    return this[2].toBigInt();
  }

  get shipsIds(): Array<BigInt> {
    return this[3].toBigIntArray();
  }

  get timestamp(): BigInt {
    return this[4].toBigInt();
  }

  get arrivalTime(): BigInt {
    return this[5].toBigInt();
  }
}

export class DiamondContract__showTerraformingInstanceResultValue0Struct extends ethereum.Tuple {
  get instanceId(): BigInt {
    return this[0].toBigInt();
  }

  get fromPlanetId(): BigInt {
    return this[1].toBigInt();
  }

  get toPlanetId(): BigInt {
    return this[2].toBigInt();
  }

  get shipsIds(): Array<BigInt> {
    return this[3].toBigIntArray();
  }

  get timestamp(): BigInt {
    return this[4].toBigInt();
  }

  get arrivalTime(): BigInt {
    return this[5].toBigInt();
  }
}

export class DiamondContract extends ethereum.SmartContract {
  static bind(address: Address): DiamondContract {
    return new DiamondContract("DiamondContract", address);
  }

  onERC1155BatchReceived(
    param0: Address,
    param1: Address,
    param2: Array<BigInt>,
    param3: Array<BigInt>,
    param4: Bytes
  ): Bytes {
    let result = super.call(
      "onERC1155BatchReceived",
      "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigIntArray(param2),
        ethereum.Value.fromUnsignedBigIntArray(param3),
        ethereum.Value.fromBytes(param4)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC1155BatchReceived(
    param0: Address,
    param1: Address,
    param2: Array<BigInt>,
    param3: Array<BigInt>,
    param4: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC1155BatchReceived",
      "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigIntArray(param2),
        ethereum.Value.fromUnsignedBigIntArray(param3),
        ethereum.Value.fromBytes(param4)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  onERC1155Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: BigInt,
    param4: Bytes
  ): Bytes {
    let result = super.call(
      "onERC1155Received",
      "onERC1155Received(address,address,uint256,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromUnsignedBigInt(param3),
        ethereum.Value.fromBytes(param4)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC1155Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: BigInt,
    param4: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC1155Received",
      "onERC1155Received(address,address,uint256,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromUnsignedBigInt(param3),
        ethereum.Value.fromBytes(param4)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  onERC721Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: Bytes
  ): Bytes {
    let result = super.call(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromBytes(param3)
      ]
    );

    return result[0].toBytes();
  }

  try_onERC721Received(
    param0: Address,
    param1: Address,
    param2: BigInt,
    param3: Bytes
  ): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "onERC721Received",
      "onERC721Received(address,address,uint256,bytes):(bytes4)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromAddress(param1),
        ethereum.Value.fromUnsignedBigInt(param2),
        ethereum.Value.fromBytes(param3)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getAllianceOwner(_allianceToCheck: Bytes): Address {
    let result = super.call(
      "getAllianceOwner",
      "getAllianceOwner(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(_allianceToCheck)]
    );

    return result[0].toAddress();
  }

  try_getAllianceOwner(_allianceToCheck: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getAllianceOwner",
      "getAllianceOwner(bytes32):(address)",
      [ethereum.Value.fromFixedBytes(_allianceToCheck)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getCurrentAlliancePlanet(_planetId: BigInt): Bytes {
    let result = super.call(
      "getCurrentAlliancePlanet",
      "getCurrentAlliancePlanet(uint256):(bytes32)",
      [ethereum.Value.fromUnsignedBigInt(_planetId)]
    );

    return result[0].toBytes();
  }

  try_getCurrentAlliancePlanet(_planetId: BigInt): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getCurrentAlliancePlanet",
      "getCurrentAlliancePlanet(uint256):(bytes32)",
      [ethereum.Value.fromUnsignedBigInt(_planetId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getCurrentAlliancePlayer(_player: Address): Bytes {
    let result = super.call(
      "getCurrentAlliancePlayer",
      "getCurrentAlliancePlayer(address):(bytes32)",
      [ethereum.Value.fromAddress(_player)]
    );

    return result[0].toBytes();
  }

  try_getCurrentAlliancePlayer(_player: Address): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getCurrentAlliancePlayer",
      "getCurrentAlliancePlayer(address):(bytes32)",
      [ethereum.Value.fromAddress(_player)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getOutstandingInvitations(_member: Address): Array<Bytes> {
    let result = super.call(
      "getOutstandingInvitations",
      "getOutstandingInvitations(address):(bytes32[])",
      [ethereum.Value.fromAddress(_member)]
    );

    return result[0].toBytesArray();
  }

  try_getOutstandingInvitations(
    _member: Address
  ): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      "getOutstandingInvitations",
      "getOutstandingInvitations(address):(bytes32[])",
      [ethereum.Value.fromAddress(_member)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  returnAllAlliances(): Array<Bytes> {
    let result = super.call(
      "returnAllAlliances",
      "returnAllAlliances():(bytes32[])",
      []
    );

    return result[0].toBytesArray();
  }

  try_returnAllAlliances(): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      "returnAllAlliances",
      "returnAllAlliances():(bytes32[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  viewAllAlliancesMembers(_allianceToCheck: Bytes): Array<Address> {
    let result = super.call(
      "viewAllAlliancesMembers",
      "viewAllAlliancesMembers(bytes32):(address[])",
      [ethereum.Value.fromFixedBytes(_allianceToCheck)]
    );

    return result[0].toAddressArray();
  }

  try_viewAllAlliancesMembers(
    _allianceToCheck: Bytes
  ): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "viewAllAlliancesMembers",
      "viewAllAlliancesMembers(bytes32):(address[])",
      [ethereum.Value.fromFixedBytes(_allianceToCheck)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  checkUpkeep(checkData: Bytes): DiamondContract__checkUpkeepResult {
    let result = super.call("checkUpkeep", "checkUpkeep(bytes):(bool,bytes)", [
      ethereum.Value.fromBytes(checkData)
    ]);

    return new DiamondContract__checkUpkeepResult(
      result[0].toBoolean(),
      result[1].toBytes()
    );
  }

  try_checkUpkeep(
    checkData: Bytes
  ): ethereum.CallResult<DiamondContract__checkUpkeepResult> {
    let result = super.tryCall(
      "checkUpkeep",
      "checkUpkeep(bytes):(bool,bytes)",
      [ethereum.Value.fromBytes(checkData)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new DiamondContract__checkUpkeepResult(
        value[0].toBoolean(),
        value[1].toBytes()
      )
    );
  }

  getAetherPlayer(_address: Address): BigInt {
    let result = super.call(
      "getAetherPlayer",
      "getAetherPlayer(address):(uint256)",
      [ethereum.Value.fromAddress(_address)]
    );

    return result[0].toBigInt();
  }

  try_getAetherPlayer(_address: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getAetherPlayer",
      "getAetherPlayer(address):(uint256)",
      [ethereum.Value.fromAddress(_address)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAllBuildings(_planetId: BigInt): Array<BigInt> {
    let result = super.call(
      "getAllBuildings",
      "getAllBuildings(uint256):(uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_planetId)]
    );

    return result[0].toBigIntArray();
  }

  try_getAllBuildings(_planetId: BigInt): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getAllBuildings",
      "getAllBuildings(uint256):(uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_planetId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getAllCraftBuildingsPlayer(
    _player: Address
  ): Array<DiamondContract__getAllCraftBuildingsPlayerResultValue0Struct> {
    let result = super.call(
      "getAllCraftBuildingsPlayer",
      "getAllCraftBuildingsPlayer(address):((uint256,uint256,uint256,uint256,uint256,uint256,uint256)[])",
      [ethereum.Value.fromAddress(_player)]
    );

    return result[0].toTupleArray<
      DiamondContract__getAllCraftBuildingsPlayerResultValue0Struct
    >();
  }

  try_getAllCraftBuildingsPlayer(
    _player: Address
  ): ethereum.CallResult<
    Array<DiamondContract__getAllCraftBuildingsPlayerResultValue0Struct>
  > {
    let result = super.tryCall(
      "getAllCraftBuildingsPlayer",
      "getAllCraftBuildingsPlayer(address):((uint256,uint256,uint256,uint256,uint256,uint256,uint256)[])",
      [ethereum.Value.fromAddress(_player)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        DiamondContract__getAllCraftBuildingsPlayerResultValue0Struct
      >()
    );
  }

  getBoost(_planetId: BigInt, _resourceId: BigInt): BigInt {
    let result = super.call("getBoost", "getBoost(uint256,uint256):(uint256)", [
      ethereum.Value.fromUnsignedBigInt(_planetId),
      ethereum.Value.fromUnsignedBigInt(_resourceId)
    ]);

    return result[0].toBigInt();
  }

  try_getBoost(
    _planetId: BigInt,
    _resourceId: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getBoost",
      "getBoost(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_planetId),
        ethereum.Value.fromUnsignedBigInt(_resourceId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getBuildingType(
    _buildingId: BigInt
  ): DiamondContract__getBuildingTypeResultValue0Struct {
    let result = super.call(
      "getBuildingType",
      "getBuildingType(uint256):((uint256[3],uint256[3],uint256[3],uint256,uint256,string))",
      [ethereum.Value.fromUnsignedBigInt(_buildingId)]
    );

    return changetype<DiamondContract__getBuildingTypeResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getBuildingType(
    _buildingId: BigInt
  ): ethereum.CallResult<DiamondContract__getBuildingTypeResultValue0Struct> {
    let result = super.tryCall(
      "getBuildingType",
      "getBuildingType(uint256):((uint256[3],uint256[3],uint256[3],uint256,uint256,string))",
      [ethereum.Value.fromUnsignedBigInt(_buildingId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<DiamondContract__getBuildingTypeResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getBuildingTypes(
    _buildingId: Array<BigInt>
  ): Array<DiamondContract__getBuildingTypesResultValue0Struct> {
    let result = super.call(
      "getBuildingTypes",
      "getBuildingTypes(uint256[]):((uint256[3],uint256[3],uint256[3],uint256,uint256,string)[])",
      [ethereum.Value.fromUnsignedBigIntArray(_buildingId)]
    );

    return result[0].toTupleArray<
      DiamondContract__getBuildingTypesResultValue0Struct
    >();
  }

  try_getBuildingTypes(
    _buildingId: Array<BigInt>
  ): ethereum.CallResult<
    Array<DiamondContract__getBuildingTypesResultValue0Struct>
  > {
    let result = super.tryCall(
      "getBuildingTypes",
      "getBuildingTypes(uint256[]):((uint256[3],uint256[3],uint256[3],uint256,uint256,string)[])",
      [ethereum.Value.fromUnsignedBigIntArray(_buildingId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        DiamondContract__getBuildingTypesResultValue0Struct
      >()
    );
  }

  getBuildings(_planetId: BigInt, _buildingId: BigInt): BigInt {
    let result = super.call(
      "getBuildings",
      "getBuildings(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_planetId),
        ethereum.Value.fromUnsignedBigInt(_buildingId)
      ]
    );

    return result[0].toBigInt();
  }

  try_getBuildings(
    _planetId: BigInt,
    _buildingId: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getBuildings",
      "getBuildings(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_planetId),
        ethereum.Value.fromUnsignedBigInt(_buildingId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getCraftBuildings(
    _planetId: BigInt
  ): DiamondContract__getCraftBuildingsResultValue0Struct {
    let result = super.call(
      "getCraftBuildings",
      "getCraftBuildings(uint256):((uint256,uint256,uint256,uint256,uint256,uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(_planetId)]
    );

    return changetype<DiamondContract__getCraftBuildingsResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getCraftBuildings(
    _planetId: BigInt
  ): ethereum.CallResult<DiamondContract__getCraftBuildingsResultValue0Struct> {
    let result = super.tryCall(
      "getCraftBuildings",
      "getCraftBuildings(uint256):((uint256,uint256,uint256,uint256,uint256,uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(_planetId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<DiamondContract__getCraftBuildingsResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getLastClaimed(_planetId: BigInt): BigInt {
    let result = super.call(
      "getLastClaimed",
      "getLastClaimed(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_planetId)]
    );

    return result[0].toBigInt();
  }

  try_getLastClaimed(_planetId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getLastClaimed",
      "getLastClaimed(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_planetId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getPlanetResources(_planetId: BigInt, _resourceId: BigInt): BigInt {
    let result = super.call(
      "getPlanetResources",
      "getPlanetResources(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_planetId),
        ethereum.Value.fromUnsignedBigInt(_resourceId)
      ]
    );

    return result[0].toBigInt();
  }

  try_getPlanetResources(
    _planetId: BigInt,
    _resourceId: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getPlanetResources",
      "getPlanetResources(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(_planetId),
        ethereum.Value.fromUnsignedBigInt(_resourceId)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getPlanetResourcesAll(_planetId: BigInt): Array<BigInt> {
    let result = super.call(
      "getPlanetResourcesAll",
      "getPlanetResourcesAll(uint256):(uint256[3])",
      [ethereum.Value.fromUnsignedBigInt(_planetId)]
    );

    return result[0].toBigIntArray();
  }

  try_getPlanetResourcesAll(
    _planetId: BigInt
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getPlanetResourcesAll",
      "getPlanetResourcesAll(uint256):(uint256[3])",
      [ethereum.Value.fromUnsignedBigInt(_planetId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getTotalBuildingTypes(): BigInt {
    let result = super.call(
      "getTotalBuildingTypes",
      "getTotalBuildingTypes():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getTotalBuildingTypes(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getTotalBuildingTypes",
      "getTotalBuildingTypes():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  facetAddress(_functionSelector: Bytes): Address {
    let result = super.call("facetAddress", "facetAddress(bytes4):(address)", [
      ethereum.Value.fromFixedBytes(_functionSelector)
    ]);

    return result[0].toAddress();
  }

  try_facetAddress(_functionSelector: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "facetAddress",
      "facetAddress(bytes4):(address)",
      [ethereum.Value.fromFixedBytes(_functionSelector)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  facetAddresses(): Array<Address> {
    let result = super.call(
      "facetAddresses",
      "facetAddresses():(address[])",
      []
    );

    return result[0].toAddressArray();
  }

  try_facetAddresses(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "facetAddresses",
      "facetAddresses():(address[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  facetFunctionSelectors(_facet: Address): Array<Bytes> {
    let result = super.call(
      "facetFunctionSelectors",
      "facetFunctionSelectors(address):(bytes4[])",
      [ethereum.Value.fromAddress(_facet)]
    );

    return result[0].toBytesArray();
  }

  try_facetFunctionSelectors(
    _facet: Address
  ): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      "facetFunctionSelectors",
      "facetFunctionSelectors(address):(bytes4[])",
      [ethereum.Value.fromAddress(_facet)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  facets(): Array<DiamondContract__facetsResultFacets_Struct> {
    let result = super.call("facets", "facets():((address,bytes4[])[])", []);

    return result[0].toTupleArray<DiamondContract__facetsResultFacets_Struct>();
  }

  try_facets(): ethereum.CallResult<
    Array<DiamondContract__facetsResultFacets_Struct>
  > {
    let result = super.tryCall("facets", "facets():((address,bytes4[])[])", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<DiamondContract__facetsResultFacets_Struct>()
    );
  }

  supportsInterface(_interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(_interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(_interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(_interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  checkAlliance(_playerToCheck: Address): Bytes {
    let result = super.call(
      "checkAlliance",
      "checkAlliance(address):(bytes32)",
      [ethereum.Value.fromAddress(_playerToCheck)]
    );

    return result[0].toBytes();
  }

  try_checkAlliance(_playerToCheck: Address): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "checkAlliance",
      "checkAlliance(address):(bytes32)",
      [ethereum.Value.fromAddress(_playerToCheck)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getAllIncomingAttacksPlanet(
    _planetId: BigInt
  ): Array<DiamondContract__getAllIncomingAttacksPlanetResultValue0Struct> {
    let result = super.call(
      "getAllIncomingAttacksPlanet",
      "getAllIncomingAttacksPlanet(uint256):((uint256,uint256,uint256,uint256,uint256,uint256[],address,uint256,uint256[])[])",
      [ethereum.Value.fromUnsignedBigInt(_planetId)]
    );

    return result[0].toTupleArray<
      DiamondContract__getAllIncomingAttacksPlanetResultValue0Struct
    >();
  }

  try_getAllIncomingAttacksPlanet(
    _planetId: BigInt
  ): ethereum.CallResult<
    Array<DiamondContract__getAllIncomingAttacksPlanetResultValue0Struct>
  > {
    let result = super.tryCall(
      "getAllIncomingAttacksPlanet",
      "getAllIncomingAttacksPlanet(uint256):((uint256,uint256,uint256,uint256,uint256,uint256[],address,uint256,uint256[])[])",
      [ethereum.Value.fromUnsignedBigInt(_planetId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        DiamondContract__getAllIncomingAttacksPlanetResultValue0Struct
      >()
    );
  }

  getAllIncomingAttacksPlayer(
    _player: Address
  ): Array<DiamondContract__getAllIncomingAttacksPlayerResultValue0Struct> {
    let result = super.call(
      "getAllIncomingAttacksPlayer",
      "getAllIncomingAttacksPlayer(address):((uint256,uint256,uint256,uint256,uint256,uint256[],address,uint256,uint256[])[])",
      [ethereum.Value.fromAddress(_player)]
    );

    return result[0].toTupleArray<
      DiamondContract__getAllIncomingAttacksPlayerResultValue0Struct
    >();
  }

  try_getAllIncomingAttacksPlayer(
    _player: Address
  ): ethereum.CallResult<
    Array<DiamondContract__getAllIncomingAttacksPlayerResultValue0Struct>
  > {
    let result = super.tryCall(
      "getAllIncomingAttacksPlayer",
      "getAllIncomingAttacksPlayer(address):((uint256,uint256,uint256,uint256,uint256,uint256[],address,uint256,uint256[])[])",
      [ethereum.Value.fromAddress(_player)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        DiamondContract__getAllIncomingAttacksPlayerResultValue0Struct
      >()
    );
  }

  getAllOutgoingAttacks(
    _player: Address
  ): Array<DiamondContract__getAllOutgoingAttacksResultValue0Struct> {
    let result = super.call(
      "getAllOutgoingAttacks",
      "getAllOutgoingAttacks(address):((uint256,uint256,uint256,uint256,uint256,uint256[],address,uint256,uint256[])[])",
      [ethereum.Value.fromAddress(_player)]
    );

    return result[0].toTupleArray<
      DiamondContract__getAllOutgoingAttacksResultValue0Struct
    >();
  }

  try_getAllOutgoingAttacks(
    _player: Address
  ): ethereum.CallResult<
    Array<DiamondContract__getAllOutgoingAttacksResultValue0Struct>
  > {
    let result = super.tryCall(
      "getAllOutgoingAttacks",
      "getAllOutgoingAttacks(address):((uint256,uint256,uint256,uint256,uint256,uint256[],address,uint256,uint256[])[])",
      [ethereum.Value.fromAddress(_player)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        DiamondContract__getAllOutgoingAttacksResultValue0Struct
      >()
    );
  }

  getAttackStatus(
    _instanceId: BigInt
  ): DiamondContract__getAttackStatusResultValue0Struct {
    let result = super.call(
      "getAttackStatus",
      "getAttackStatus(uint256):((uint256,uint256,uint256,uint256,uint256,uint256[],address,uint256,uint256[]))",
      [ethereum.Value.fromUnsignedBigInt(_instanceId)]
    );

    return changetype<DiamondContract__getAttackStatusResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getAttackStatus(
    _instanceId: BigInt
  ): ethereum.CallResult<DiamondContract__getAttackStatusResultValue0Struct> {
    let result = super.tryCall(
      "getAttackStatus",
      "getAttackStatus(uint256):((uint256,uint256,uint256,uint256,uint256,uint256[],address,uint256,uint256[]))",
      [ethereum.Value.fromUnsignedBigInt(_instanceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<DiamondContract__getAttackStatusResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getCurrentAttackStorageSize(): BigInt {
    let result = super.call(
      "getCurrentAttackStorageSize",
      "getCurrentAttackStorageSize():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getCurrentAttackStorageSize(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getCurrentAttackStorageSize",
      "getCurrentAttackStorageSize():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getMultipleRunningAttacks(
    _startRange: BigInt,
    _endRange: BigInt
  ): Array<DiamondContract__getMultipleRunningAttacksResultValue0Struct> {
    let result = super.call(
      "getMultipleRunningAttacks",
      "getMultipleRunningAttacks(uint256,uint256):((uint256,uint256,uint256,uint256,uint256,uint256[],address,uint256,uint256[])[])",
      [
        ethereum.Value.fromUnsignedBigInt(_startRange),
        ethereum.Value.fromUnsignedBigInt(_endRange)
      ]
    );

    return result[0].toTupleArray<
      DiamondContract__getMultipleRunningAttacksResultValue0Struct
    >();
  }

  try_getMultipleRunningAttacks(
    _startRange: BigInt,
    _endRange: BigInt
  ): ethereum.CallResult<
    Array<DiamondContract__getMultipleRunningAttacksResultValue0Struct>
  > {
    let result = super.tryCall(
      "getMultipleRunningAttacks",
      "getMultipleRunningAttacks(uint256,uint256):((uint256,uint256,uint256,uint256,uint256,uint256[],address,uint256,uint256[])[])",
      [
        ethereum.Value.fromUnsignedBigInt(_startRange),
        ethereum.Value.fromUnsignedBigInt(_endRange)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        DiamondContract__getMultipleRunningAttacksResultValue0Struct
      >()
    );
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getPlayersFaction(_account: Address): BigInt {
    let result = super.call(
      "getPlayersFaction",
      "getPlayersFaction(address):(uint256)",
      [ethereum.Value.fromAddress(_account)]
    );

    return result[0].toBigInt();
  }

  try_getPlayersFaction(_account: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getPlayersFaction",
      "getPlayersFaction(address):(uint256)",
      [ethereum.Value.fromAddress(_account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRegistered(_account: Address): boolean {
    let result = super.call("getRegistered", "getRegistered(address):(bool)", [
      ethereum.Value.fromAddress(_account)
    ]);

    return result[0].toBoolean();
  }

  try_getRegistered(_account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "getRegistered",
      "getRegistered(address):(bool)",
      [ethereum.Value.fromAddress(_account)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  calculateMinedResourceAmount(
    cargo: BigInt,
    isAsteroidbelt: boolean
  ): Array<BigInt> {
    let result = super.call(
      "calculateMinedResourceAmount",
      "calculateMinedResourceAmount(uint256,bool):(uint256[])",
      [
        ethereum.Value.fromUnsignedBigInt(cargo),
        ethereum.Value.fromBoolean(isAsteroidbelt)
      ]
    );

    return result[0].toBigIntArray();
  }

  try_calculateMinedResourceAmount(
    cargo: BigInt,
    isAsteroidbelt: boolean
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "calculateMinedResourceAmount",
      "calculateMinedResourceAmount(uint256,bool):(uint256[])",
      [
        ethereum.Value.fromUnsignedBigInt(cargo),
        ethereum.Value.fromBoolean(isAsteroidbelt)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  calculatePercentage(amount: BigInt, percentage: BigInt): BigInt {
    let result = super.call(
      "calculatePercentage",
      "calculatePercentage(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(amount),
        ethereum.Value.fromUnsignedBigInt(percentage)
      ]
    );

    return result[0].toBigInt();
  }

  try_calculatePercentage(
    amount: BigInt,
    percentage: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "calculatePercentage",
      "calculatePercentage(uint256,uint256):(uint256)",
      [
        ethereum.Value.fromUnsignedBigInt(amount),
        ethereum.Value.fromUnsignedBigInt(percentage)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  checkAvailableModuleSlots(_shipId: BigInt): BigInt {
    let result = super.call(
      "checkAvailableModuleSlots",
      "checkAvailableModuleSlots(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_shipId)]
    );

    return result[0].toBigInt();
  }

  try_checkAvailableModuleSlots(_shipId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "checkAvailableModuleSlots",
      "checkAvailableModuleSlots(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_shipId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  checkShipAssignedPlanet(_shipId: BigInt): BigInt {
    let result = super.call(
      "checkShipAssignedPlanet",
      "checkShipAssignedPlanet(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_shipId)]
    );

    return result[0].toBigInt();
  }

  try_checkShipAssignedPlanet(_shipId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "checkShipAssignedPlanet",
      "checkShipAssignedPlanet(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_shipId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  checkShippingCapacities(_planetId: BigInt): BigInt {
    let result = super.call(
      "checkShippingCapacities",
      "checkShippingCapacities(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_planetId)]
    );

    return result[0].toBigInt();
  }

  try_checkShippingCapacities(_planetId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "checkShippingCapacities",
      "checkShippingCapacities(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_planetId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getAllCraftShipsPlayer(
    _player: Address
  ): Array<DiamondContract__getAllCraftShipsPlayerResultValue0Struct> {
    let result = super.call(
      "getAllCraftShipsPlayer",
      "getAllCraftShipsPlayer(address):((uint256,uint256,uint256,uint256,uint256,uint256,uint256)[])",
      [ethereum.Value.fromAddress(_player)]
    );

    return result[0].toTupleArray<
      DiamondContract__getAllCraftShipsPlayerResultValue0Struct
    >();
  }

  try_getAllCraftShipsPlayer(
    _player: Address
  ): ethereum.CallResult<
    Array<DiamondContract__getAllCraftShipsPlayerResultValue0Struct>
  > {
    let result = super.tryCall(
      "getAllCraftShipsPlayer",
      "getAllCraftShipsPlayer(address):((uint256,uint256,uint256,uint256,uint256,uint256,uint256)[])",
      [ethereum.Value.fromAddress(_player)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        DiamondContract__getAllCraftShipsPlayerResultValue0Struct
      >()
    );
  }

  getAllOutMiningPlanet(
    _planetId: BigInt
  ): Array<DiamondContract__getAllOutMiningPlanetResultValue0Struct> {
    let result = super.call(
      "getAllOutMiningPlanet",
      "getAllOutMiningPlanet(uint256):((uint256,uint256,uint256,uint256[],uint256,uint256)[])",
      [ethereum.Value.fromUnsignedBigInt(_planetId)]
    );

    return result[0].toTupleArray<
      DiamondContract__getAllOutMiningPlanetResultValue0Struct
    >();
  }

  try_getAllOutMiningPlanet(
    _planetId: BigInt
  ): ethereum.CallResult<
    Array<DiamondContract__getAllOutMiningPlanetResultValue0Struct>
  > {
    let result = super.tryCall(
      "getAllOutMiningPlanet",
      "getAllOutMiningPlanet(uint256):((uint256,uint256,uint256,uint256[],uint256,uint256)[])",
      [ethereum.Value.fromUnsignedBigInt(_planetId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        DiamondContract__getAllOutMiningPlanetResultValue0Struct
      >()
    );
  }

  getAllOutMiningPlayer(
    _player: Address
  ): Array<DiamondContract__getAllOutMiningPlayerResultValue0Struct> {
    let result = super.call(
      "getAllOutMiningPlayer",
      "getAllOutMiningPlayer(address):((uint256,uint256,uint256,uint256[],uint256,uint256)[])",
      [ethereum.Value.fromAddress(_player)]
    );

    return result[0].toTupleArray<
      DiamondContract__getAllOutMiningPlayerResultValue0Struct
    >();
  }

  try_getAllOutMiningPlayer(
    _player: Address
  ): ethereum.CallResult<
    Array<DiamondContract__getAllOutMiningPlayerResultValue0Struct>
  > {
    let result = super.tryCall(
      "getAllOutMiningPlayer",
      "getAllOutMiningPlayer(address):((uint256,uint256,uint256,uint256[],uint256,uint256)[])",
      [ethereum.Value.fromAddress(_player)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        DiamondContract__getAllOutMiningPlayerResultValue0Struct
      >()
    );
  }

  getAllSendResources(
    _planetId: BigInt
  ): Array<DiamondContract__getAllSendResourcesResultValue0Struct> {
    let result = super.call(
      "getAllSendResources",
      "getAllSendResources(uint256):((uint256,uint256,uint256[],uint256,uint256,uint256[3])[])",
      [ethereum.Value.fromUnsignedBigInt(_planetId)]
    );

    return result[0].toTupleArray<
      DiamondContract__getAllSendResourcesResultValue0Struct
    >();
  }

  try_getAllSendResources(
    _planetId: BigInt
  ): ethereum.CallResult<
    Array<DiamondContract__getAllSendResourcesResultValue0Struct>
  > {
    let result = super.tryCall(
      "getAllSendResources",
      "getAllSendResources(uint256):((uint256,uint256,uint256[],uint256,uint256,uint256[3])[])",
      [ethereum.Value.fromUnsignedBigInt(_planetId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        DiamondContract__getAllSendResourcesResultValue0Struct
      >()
    );
  }

  getAllTerraformingPlayer(
    _playerToCheck: Address
  ): Array<DiamondContract__getAllTerraformingPlayerResultValue0Struct> {
    let result = super.call(
      "getAllTerraformingPlayer",
      "getAllTerraformingPlayer(address):((uint256,uint256,uint256,uint256[],uint256,uint256)[])",
      [ethereum.Value.fromAddress(_playerToCheck)]
    );

    return result[0].toTupleArray<
      DiamondContract__getAllTerraformingPlayerResultValue0Struct
    >();
  }

  try_getAllTerraformingPlayer(
    _playerToCheck: Address
  ): ethereum.CallResult<
    Array<DiamondContract__getAllTerraformingPlayerResultValue0Struct>
  > {
    let result = super.tryCall(
      "getAllTerraformingPlayer",
      "getAllTerraformingPlayer(address):((uint256,uint256,uint256,uint256[],uint256,uint256)[])",
      [ethereum.Value.fromAddress(_playerToCheck)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        DiamondContract__getAllTerraformingPlayerResultValue0Struct
      >()
    );
  }

  getCraftFleets(
    _planetId: BigInt
  ): DiamondContract__getCraftFleetsResultValue0Struct {
    let result = super.call(
      "getCraftFleets",
      "getCraftFleets(uint256):((uint256,uint256,uint256,uint256,uint256,uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(_planetId)]
    );

    return changetype<DiamondContract__getCraftFleetsResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getCraftFleets(
    _planetId: BigInt
  ): ethereum.CallResult<DiamondContract__getCraftFleetsResultValue0Struct> {
    let result = super.tryCall(
      "getCraftFleets",
      "getCraftFleets(uint256):((uint256,uint256,uint256,uint256,uint256,uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(_planetId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<DiamondContract__getCraftFleetsResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getDefensePlanetDetailed(
    _planetId: BigInt
  ): DiamondContract__getDefensePlanetDetailedResult {
    let result = super.call(
      "getDefensePlanetDetailed",
      "getDefensePlanetDetailed(uint256):(uint256[],(uint256,uint256[4],uint256,uint256[3],uint256[3],uint256,uint256,uint256,uint256,string,uint256)[])",
      [ethereum.Value.fromUnsignedBigInt(_planetId)]
    );

    return new DiamondContract__getDefensePlanetDetailedResult(
      result[0].toBigIntArray(),
      result[1].toTupleArray<
        DiamondContract__getDefensePlanetDetailedResultValue1Struct
      >()
    );
  }

  try_getDefensePlanetDetailed(
    _planetId: BigInt
  ): ethereum.CallResult<DiamondContract__getDefensePlanetDetailedResult> {
    let result = super.tryCall(
      "getDefensePlanetDetailed",
      "getDefensePlanetDetailed(uint256):(uint256[],(uint256,uint256[4],uint256,uint256[3],uint256[3],uint256,uint256,uint256,uint256,string,uint256)[])",
      [ethereum.Value.fromUnsignedBigInt(_planetId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new DiamondContract__getDefensePlanetDetailedResult(
        value[0].toBigIntArray(),
        value[1].toTupleArray<
          DiamondContract__getDefensePlanetDetailedResultValue1Struct
        >()
      )
    );
  }

  getDefensePlanetDetailedIds(_planetId: BigInt): Array<BigInt> {
    let result = super.call(
      "getDefensePlanetDetailedIds",
      "getDefensePlanetDetailedIds(uint256):(uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_planetId)]
    );

    return result[0].toBigIntArray();
  }

  try_getDefensePlanetDetailedIds(
    _planetId: BigInt
  ): ethereum.CallResult<Array<BigInt>> {
    let result = super.tryCall(
      "getDefensePlanetDetailedIds",
      "getDefensePlanetDetailedIds(uint256):(uint256[])",
      [ethereum.Value.fromUnsignedBigInt(_planetId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigIntArray());
  }

  getPlanetAmount(): BigInt {
    let result = super.call(
      "getPlanetAmount",
      "getPlanetAmount():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getPlanetAmount(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getPlanetAmount",
      "getPlanetAmount():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getPlanetType(_planetId: BigInt): BigInt {
    let result = super.call(
      "getPlanetType",
      "getPlanetType(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_planetId)]
    );

    return result[0].toBigInt();
  }

  try_getPlanetType(_planetId: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getPlanetType",
      "getPlanetType(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(_planetId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getShipStatsDiamond(
    _shipId: BigInt
  ): DiamondContract__getShipStatsDiamondResultValue0Struct {
    let result = super.call(
      "getShipStatsDiamond",
      "getShipStatsDiamond(uint256):((uint256,uint256[4],uint256,uint256[3],uint256[3],uint256,uint256,uint256,uint256,string,uint256))",
      [ethereum.Value.fromUnsignedBigInt(_shipId)]
    );

    return changetype<DiamondContract__getShipStatsDiamondResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getShipStatsDiamond(
    _shipId: BigInt
  ): ethereum.CallResult<
    DiamondContract__getShipStatsDiamondResultValue0Struct
  > {
    let result = super.tryCall(
      "getShipStatsDiamond",
      "getShipStatsDiamond(uint256):((uint256,uint256[4],uint256,uint256[3],uint256[3],uint256,uint256,uint256,uint256,string,uint256))",
      [ethereum.Value.fromUnsignedBigInt(_shipId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<DiamondContract__getShipStatsDiamondResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getShipTypeStats(
    _shipId: BigInt
  ): DiamondContract__getShipTypeStatsResultValue0Struct {
    let result = super.call(
      "getShipTypeStats",
      "getShipTypeStats(uint256):((uint256,uint256[4],uint256,uint256[3],uint256[3],uint256,uint256,uint256,uint256,string,uint256))",
      [ethereum.Value.fromUnsignedBigInt(_shipId)]
    );

    return changetype<DiamondContract__getShipTypeStatsResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getShipTypeStats(
    _shipId: BigInt
  ): ethereum.CallResult<DiamondContract__getShipTypeStatsResultValue0Struct> {
    let result = super.tryCall(
      "getShipTypeStats",
      "getShipTypeStats(uint256):((uint256,uint256[4],uint256,uint256[3],uint256[3],uint256,uint256,uint256,uint256,string,uint256))",
      [ethereum.Value.fromUnsignedBigInt(_shipId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<DiamondContract__getShipTypeStatsResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  returnEquippedModuleSlots(
    _shipId: BigInt
  ): Array<DiamondContract__returnEquippedModuleSlotsResultValue0Struct> {
    let result = super.call(
      "returnEquippedModuleSlots",
      "returnEquippedModuleSlots(uint256):((string,uint256[3],uint256[3],uint256,uint256[3])[])",
      [ethereum.Value.fromUnsignedBigInt(_shipId)]
    );

    return result[0].toTupleArray<
      DiamondContract__returnEquippedModuleSlotsResultValue0Struct
    >();
  }

  try_returnEquippedModuleSlots(
    _shipId: BigInt
  ): ethereum.CallResult<
    Array<DiamondContract__returnEquippedModuleSlotsResultValue0Struct>
  > {
    let result = super.tryCall(
      "returnEquippedModuleSlots",
      "returnEquippedModuleSlots(uint256):((string,uint256[3],uint256[3],uint256,uint256[3])[])",
      [ethereum.Value.fromUnsignedBigInt(_shipId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        DiamondContract__returnEquippedModuleSlotsResultValue0Struct
      >()
    );
  }

  showIncomingTerraformersPlanet(
    _planetId: BigInt
  ): Array<DiamondContract__showIncomingTerraformersPlanetResultValue0Struct> {
    let result = super.call(
      "showIncomingTerraformersPlanet",
      "showIncomingTerraformersPlanet(uint256):((uint256,uint256,uint256,uint256[],uint256,uint256)[])",
      [ethereum.Value.fromUnsignedBigInt(_planetId)]
    );

    return result[0].toTupleArray<
      DiamondContract__showIncomingTerraformersPlanetResultValue0Struct
    >();
  }

  try_showIncomingTerraformersPlanet(
    _planetId: BigInt
  ): ethereum.CallResult<
    Array<DiamondContract__showIncomingTerraformersPlanetResultValue0Struct>
  > {
    let result = super.tryCall(
      "showIncomingTerraformersPlanet",
      "showIncomingTerraformersPlanet(uint256):((uint256,uint256,uint256,uint256[],uint256,uint256)[])",
      [ethereum.Value.fromUnsignedBigInt(_planetId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<
        DiamondContract__showIncomingTerraformersPlanetResultValue0Struct
      >()
    );
  }

  showOutminingInstance(
    _idToCheck: BigInt
  ): DiamondContract__showOutminingInstanceResultValue0Struct {
    let result = super.call(
      "showOutminingInstance",
      "showOutminingInstance(uint256):((uint256,uint256,uint256,uint256[],uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(_idToCheck)]
    );

    return changetype<DiamondContract__showOutminingInstanceResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_showOutminingInstance(
    _idToCheck: BigInt
  ): ethereum.CallResult<
    DiamondContract__showOutminingInstanceResultValue0Struct
  > {
    let result = super.tryCall(
      "showOutminingInstance",
      "showOutminingInstance(uint256):((uint256,uint256,uint256,uint256[],uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(_idToCheck)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<DiamondContract__showOutminingInstanceResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  showTerraformingInstance(
    _idToCheck: BigInt
  ): DiamondContract__showTerraformingInstanceResultValue0Struct {
    let result = super.call(
      "showTerraformingInstance",
      "showTerraformingInstance(uint256):((uint256,uint256,uint256,uint256[],uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(_idToCheck)]
    );

    return changetype<
      DiamondContract__showTerraformingInstanceResultValue0Struct
    >(result[0].toTuple());
  }

  try_showTerraformingInstance(
    _idToCheck: BigInt
  ): ethereum.CallResult<
    DiamondContract__showTerraformingInstanceResultValue0Struct
  > {
    let result = super.tryCall(
      "showTerraformingInstance",
      "showTerraformingInstance(uint256):((uint256,uint256,uint256,uint256[],uint256,uint256))",
      [ethereum.Value.fromUnsignedBigInt(_idToCheck)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<DiamondContract__showTerraformingInstanceResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }
}

export class AddBuildingTypeCall extends ethereum.Call {
  get inputs(): AddBuildingTypeCall__Inputs {
    return new AddBuildingTypeCall__Inputs(this);
  }

  get outputs(): AddBuildingTypeCall__Outputs {
    return new AddBuildingTypeCall__Outputs(this);
  }
}

export class AddBuildingTypeCall__Inputs {
  _call: AddBuildingTypeCall;

  constructor(call: AddBuildingTypeCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _building(): AddBuildingTypeCall_buildingStruct {
    return changetype<AddBuildingTypeCall_buildingStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class AddBuildingTypeCall__Outputs {
  _call: AddBuildingTypeCall;

  constructor(call: AddBuildingTypeCall) {
    this._call = call;
  }
}

export class AddBuildingTypeCall_buildingStruct extends ethereum.Tuple {
  get price(): Array<BigInt> {
    return this[0].toBigIntArray();
  }

  get boosts(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get defenseTypes(): Array<BigInt> {
    return this[2].toBigIntArray();
  }

  get health(): BigInt {
    return this[3].toBigInt();
  }

  get craftTime(): BigInt {
    return this[4].toBigInt();
  }

  get name(): string {
    return this[5].toString();
  }
}

export class AddFactionCall extends ethereum.Call {
  get inputs(): AddFactionCall__Inputs {
    return new AddFactionCall__Inputs(this);
  }

  get outputs(): AddFactionCall__Outputs {
    return new AddFactionCall__Outputs(this);
  }
}

export class AddFactionCall__Inputs {
  _call: AddFactionCall;

  constructor(call: AddFactionCall) {
    this._call = call;
  }

  get _newAmount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class AddFactionCall__Outputs {
  _call: AddFactionCall;

  constructor(call: AddFactionCall) {
    this._call = call;
  }
}

export class AddLevelsCall extends ethereum.Call {
  get inputs(): AddLevelsCall__Inputs {
    return new AddLevelsCall__Inputs(this);
  }

  get outputs(): AddLevelsCall__Outputs {
    return new AddLevelsCall__Outputs(this);
  }
}

export class AddLevelsCall__Inputs {
  _call: AddLevelsCall;

  constructor(call: AddLevelsCall) {
    this._call = call;
  }

  get _shipType(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _level(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _shipStatsToUpgrade(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get _resourceCost(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get _maxLevel(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class AddLevelsCall__Outputs {
  _call: AddLevelsCall;

  constructor(call: AddLevelsCall) {
    this._call = call;
  }
}

export class AddShipModuleTypeCall extends ethereum.Call {
  get inputs(): AddShipModuleTypeCall__Inputs {
    return new AddShipModuleTypeCall__Inputs(this);
  }

  get outputs(): AddShipModuleTypeCall__Outputs {
    return new AddShipModuleTypeCall__Outputs(this);
  }
}

export class AddShipModuleTypeCall__Inputs {
  _call: AddShipModuleTypeCall;

  constructor(call: AddShipModuleTypeCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _newShipModuleType(): AddShipModuleTypeCall_newShipModuleTypeStruct {
    return changetype<AddShipModuleTypeCall_newShipModuleTypeStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class AddShipModuleTypeCall__Outputs {
  _call: AddShipModuleTypeCall;

  constructor(call: AddShipModuleTypeCall) {
    this._call = call;
  }
}

export class AddShipModuleTypeCall_newShipModuleTypeStruct extends ethereum.Tuple {
  get name(): string {
    return this[0].toString();
  }

  get attackBoostStat(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get defenseBoostStat(): Array<BigInt> {
    return this[2].toBigIntArray();
  }

  get healthBoostStat(): BigInt {
    return this[3].toBigInt();
  }

  get price(): Array<BigInt> {
    return this[4].toBigIntArray();
  }
}

export class AddShipTypeCall extends ethereum.Call {
  get inputs(): AddShipTypeCall__Inputs {
    return new AddShipTypeCall__Inputs(this);
  }

  get outputs(): AddShipTypeCall__Outputs {
    return new AddShipTypeCall__Outputs(this);
  }
}

export class AddShipTypeCall__Inputs {
  _call: AddShipTypeCall;

  constructor(call: AddShipTypeCall) {
    this._call = call;
  }

  get _id(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _newShipType(): AddShipTypeCall_newShipTypeStruct {
    return changetype<AddShipTypeCall_newShipTypeStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class AddShipTypeCall__Outputs {
  _call: AddShipTypeCall;

  constructor(call: AddShipTypeCall) {
    this._call = call;
  }
}

export class AddShipTypeCall_newShipTypeStruct extends ethereum.Tuple {
  get shipType(): BigInt {
    return this[0].toBigInt();
  }

  get price(): Array<BigInt> {
    return this[1].toBigIntArray();
  }

  get attack(): BigInt {
    return this[2].toBigInt();
  }

  get attackTypes(): Array<BigInt> {
    return this[3].toBigIntArray();
  }

  get defenseTypes(): Array<BigInt> {
    return this[4].toBigIntArray();
  }

  get health(): BigInt {
    return this[5].toBigInt();
  }

  get cargo(): BigInt {
    return this[6].toBigInt();
  }

  get craftTime(): BigInt {
    return this[7].toBigInt();
  }

  get craftedFrom(): BigInt {
    return this[8].toBigInt();
  }

  get name(): string {
    return this[9].toString();
  }

  get moduleSlots(): BigInt {
    return this[10].toBigInt();
  }
}

export class ChangeChainRunnerCall extends ethereum.Call {
  get inputs(): ChangeChainRunnerCall__Inputs {
    return new ChangeChainRunnerCall__Inputs(this);
  }

  get outputs(): ChangeChainRunnerCall__Outputs {
    return new ChangeChainRunnerCall__Outputs(this);
  }
}

export class ChangeChainRunnerCall__Inputs {
  _call: ChangeChainRunnerCall;

  constructor(call: ChangeChainRunnerCall) {
    this._call = call;
  }

  get _newChainRunner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeChainRunnerCall__Outputs {
  _call: ChangeChainRunnerCall;

  constructor(call: ChangeChainRunnerCall) {
    this._call = call;
  }
}

export class DrawRandomAttackSeedCall extends ethereum.Call {
  get inputs(): DrawRandomAttackSeedCall__Inputs {
    return new DrawRandomAttackSeedCall__Inputs(this);
  }

  get outputs(): DrawRandomAttackSeedCall__Outputs {
    return new DrawRandomAttackSeedCall__Outputs(this);
  }
}

export class DrawRandomAttackSeedCall__Inputs {
  _call: DrawRandomAttackSeedCall;

  constructor(call: DrawRandomAttackSeedCall) {
    this._call = call;
  }

  get _attackId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DrawRandomAttackSeedCall__Outputs {
  _call: DrawRandomAttackSeedCall;

  constructor(call: DrawRandomAttackSeedCall) {
    this._call = call;
  }
}

export class OnERC1155BatchReceivedCall extends ethereum.Call {
  get inputs(): OnERC1155BatchReceivedCall__Inputs {
    return new OnERC1155BatchReceivedCall__Inputs(this);
  }

  get outputs(): OnERC1155BatchReceivedCall__Outputs {
    return new OnERC1155BatchReceivedCall__Outputs(this);
  }
}

export class OnERC1155BatchReceivedCall__Inputs {
  _call: OnERC1155BatchReceivedCall;

  constructor(call: OnERC1155BatchReceivedCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get value2(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }

  get value3(): Array<BigInt> {
    return this._call.inputValues[3].value.toBigIntArray();
  }

  get value4(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class OnERC1155BatchReceivedCall__Outputs {
  _call: OnERC1155BatchReceivedCall;

  constructor(call: OnERC1155BatchReceivedCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class OnERC1155ReceivedCall extends ethereum.Call {
  get inputs(): OnERC1155ReceivedCall__Inputs {
    return new OnERC1155ReceivedCall__Inputs(this);
  }

  get outputs(): OnERC1155ReceivedCall__Outputs {
    return new OnERC1155ReceivedCall__Outputs(this);
  }
}

export class OnERC1155ReceivedCall__Inputs {
  _call: OnERC1155ReceivedCall;

  constructor(call: OnERC1155ReceivedCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get value2(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get value3(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get value4(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class OnERC1155ReceivedCall__Outputs {
  _call: OnERC1155ReceivedCall;

  constructor(call: OnERC1155ReceivedCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class OnERC721ReceivedCall extends ethereum.Call {
  get inputs(): OnERC721ReceivedCall__Inputs {
    return new OnERC721ReceivedCall__Inputs(this);
  }

  get outputs(): OnERC721ReceivedCall__Outputs {
    return new OnERC721ReceivedCall__Outputs(this);
  }
}

export class OnERC721ReceivedCall__Inputs {
  _call: OnERC721ReceivedCall;

  constructor(call: OnERC721ReceivedCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get value1(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get value2(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get value3(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }
}

export class OnERC721ReceivedCall__Outputs {
  _call: OnERC721ReceivedCall;

  constructor(call: OnERC721ReceivedCall) {
    this._call = call;
  }

  get value0(): Bytes {
    return this._call.outputValues[0].value.toBytes();
  }
}

export class SetAddressesCall extends ethereum.Call {
  get inputs(): SetAddressesCall__Inputs {
    return new SetAddressesCall__Inputs(this);
  }

  get outputs(): SetAddressesCall__Outputs {
    return new SetAddressesCall__Outputs(this);
  }
}

export class SetAddressesCall__Inputs {
  _call: SetAddressesCall;

  constructor(call: SetAddressesCall) {
    this._call = call;
  }

  get _crystal(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _antimatter(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _metal(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get _aether(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _ships(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _planets(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _chainRunner(): Address {
    return this._call.inputValues[6].value.toAddress();
  }
}

export class SetAddressesCall__Outputs {
  _call: SetAddressesCall;

  constructor(call: SetAddressesCall) {
    this._call = call;
  }
}

export class StartInitCall extends ethereum.Call {
  get inputs(): StartInitCall__Inputs {
    return new StartInitCall__Inputs(this);
  }

  get outputs(): StartInitCall__Outputs {
    return new StartInitCall__Outputs(this);
  }
}

export class StartInitCall__Inputs {
  _call: StartInitCall;

  constructor(call: StartInitCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get typeOfPlanet(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class StartInitCall__Outputs {
  _call: StartInitCall;

  constructor(call: StartInitCall) {
    this._call = call;
  }
}

export class ChangeAllianceOwnerCall extends ethereum.Call {
  get inputs(): ChangeAllianceOwnerCall__Inputs {
    return new ChangeAllianceOwnerCall__Inputs(this);
  }

  get outputs(): ChangeAllianceOwnerCall__Outputs {
    return new ChangeAllianceOwnerCall__Outputs(this);
  }
}

export class ChangeAllianceOwnerCall__Inputs {
  _call: ChangeAllianceOwnerCall;

  constructor(call: ChangeAllianceOwnerCall) {
    this._call = call;
  }

  get _newAllianceOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeAllianceOwnerCall__Outputs {
  _call: ChangeAllianceOwnerCall;

  constructor(call: ChangeAllianceOwnerCall) {
    this._call = call;
  }
}

export class CreateAllianceCall extends ethereum.Call {
  get inputs(): CreateAllianceCall__Inputs {
    return new CreateAllianceCall__Inputs(this);
  }

  get outputs(): CreateAllianceCall__Outputs {
    return new CreateAllianceCall__Outputs(this);
  }
}

export class CreateAllianceCall__Inputs {
  _call: CreateAllianceCall;

  constructor(call: CreateAllianceCall) {
    this._call = call;
  }

  get _allianceNameToCreate(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class CreateAllianceCall__Outputs {
  _call: CreateAllianceCall;

  constructor(call: CreateAllianceCall) {
    this._call = call;
  }
}

export class InviteToAllianceCall extends ethereum.Call {
  get inputs(): InviteToAllianceCall__Inputs {
    return new InviteToAllianceCall__Inputs(this);
  }

  get outputs(): InviteToAllianceCall__Outputs {
    return new InviteToAllianceCall__Outputs(this);
  }
}

export class InviteToAllianceCall__Inputs {
  _call: InviteToAllianceCall;

  constructor(call: InviteToAllianceCall) {
    this._call = call;
  }

  get _memberInvited(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class InviteToAllianceCall__Outputs {
  _call: InviteToAllianceCall;

  constructor(call: InviteToAllianceCall) {
    this._call = call;
  }
}

export class JoinAllianceCall extends ethereum.Call {
  get inputs(): JoinAllianceCall__Inputs {
    return new JoinAllianceCall__Inputs(this);
  }

  get outputs(): JoinAllianceCall__Outputs {
    return new JoinAllianceCall__Outputs(this);
  }
}

export class JoinAllianceCall__Inputs {
  _call: JoinAllianceCall;

  constructor(call: JoinAllianceCall) {
    this._call = call;
  }

  get _allianceToJoin(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class JoinAllianceCall__Outputs {
  _call: JoinAllianceCall;

  constructor(call: JoinAllianceCall) {
    this._call = call;
  }
}

export class KickAllianceMemberCall extends ethereum.Call {
  get inputs(): KickAllianceMemberCall__Inputs {
    return new KickAllianceMemberCall__Inputs(this);
  }

  get outputs(): KickAllianceMemberCall__Outputs {
    return new KickAllianceMemberCall__Outputs(this);
  }
}

export class KickAllianceMemberCall__Inputs {
  _call: KickAllianceMemberCall;

  constructor(call: KickAllianceMemberCall) {
    this._call = call;
  }

  get _player(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class KickAllianceMemberCall__Outputs {
  _call: KickAllianceMemberCall;

  constructor(call: KickAllianceMemberCall) {
    this._call = call;
  }
}

export class LeaveAllianceCall extends ethereum.Call {
  get inputs(): LeaveAllianceCall__Inputs {
    return new LeaveAllianceCall__Inputs(this);
  }

  get outputs(): LeaveAllianceCall__Outputs {
    return new LeaveAllianceCall__Outputs(this);
  }
}

export class LeaveAllianceCall__Inputs {
  _call: LeaveAllianceCall;

  constructor(call: LeaveAllianceCall) {
    this._call = call;
  }
}

export class LeaveAllianceCall__Outputs {
  _call: LeaveAllianceCall;

  constructor(call: LeaveAllianceCall) {
    this._call = call;
  }
}

export class PerformUpkeepCall extends ethereum.Call {
  get inputs(): PerformUpkeepCall__Inputs {
    return new PerformUpkeepCall__Inputs(this);
  }

  get outputs(): PerformUpkeepCall__Outputs {
    return new PerformUpkeepCall__Outputs(this);
  }
}

export class PerformUpkeepCall__Inputs {
  _call: PerformUpkeepCall;

  constructor(call: PerformUpkeepCall) {
    this._call = call;
  }

  get performData(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class PerformUpkeepCall__Outputs {
  _call: PerformUpkeepCall;

  constructor(call: PerformUpkeepCall) {
    this._call = call;
  }
}

export class ClaimBuildingCall extends ethereum.Call {
  get inputs(): ClaimBuildingCall__Inputs {
    return new ClaimBuildingCall__Inputs(this);
  }

  get outputs(): ClaimBuildingCall__Outputs {
    return new ClaimBuildingCall__Outputs(this);
  }
}

export class ClaimBuildingCall__Inputs {
  _call: ClaimBuildingCall;

  constructor(call: ClaimBuildingCall) {
    this._call = call;
  }

  get _planetId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ClaimBuildingCall__Outputs {
  _call: ClaimBuildingCall;

  constructor(call: ClaimBuildingCall) {
    this._call = call;
  }
}

export class CraftBuildingCall extends ethereum.Call {
  get inputs(): CraftBuildingCall__Inputs {
    return new CraftBuildingCall__Inputs(this);
  }

  get outputs(): CraftBuildingCall__Outputs {
    return new CraftBuildingCall__Outputs(this);
  }
}

export class CraftBuildingCall__Inputs {
  _call: CraftBuildingCall;

  constructor(call: CraftBuildingCall) {
    this._call = call;
  }

  get _buildingId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _planetId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class CraftBuildingCall__Outputs {
  _call: CraftBuildingCall;

  constructor(call: CraftBuildingCall) {
    this._call = call;
  }
}

export class DepositAetherCall extends ethereum.Call {
  get inputs(): DepositAetherCall__Inputs {
    return new DepositAetherCall__Inputs(this);
  }

  get outputs(): DepositAetherCall__Outputs {
    return new DepositAetherCall__Outputs(this);
  }
}

export class DepositAetherCall__Inputs {
  _call: DepositAetherCall;

  constructor(call: DepositAetherCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DepositAetherCall__Outputs {
  _call: DepositAetherCall;

  constructor(call: DepositAetherCall) {
    this._call = call;
  }
}

export class MineResourcesCall extends ethereum.Call {
  get inputs(): MineResourcesCall__Inputs {
    return new MineResourcesCall__Inputs(this);
  }

  get outputs(): MineResourcesCall__Outputs {
    return new MineResourcesCall__Outputs(this);
  }
}

export class MineResourcesCall__Inputs {
  _call: MineResourcesCall;

  constructor(call: MineResourcesCall) {
    this._call = call;
  }

  get _planetId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class MineResourcesCall__Outputs {
  _call: MineResourcesCall;

  constructor(call: MineResourcesCall) {
    this._call = call;
  }
}

export class RecycleBuildingsCall extends ethereum.Call {
  get inputs(): RecycleBuildingsCall__Inputs {
    return new RecycleBuildingsCall__Inputs(this);
  }

  get outputs(): RecycleBuildingsCall__Outputs {
    return new RecycleBuildingsCall__Outputs(this);
  }
}

export class RecycleBuildingsCall__Inputs {
  _call: RecycleBuildingsCall;

  constructor(call: RecycleBuildingsCall) {
    this._call = call;
  }

  get _planetId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _buildingId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class RecycleBuildingsCall__Outputs {
  _call: RecycleBuildingsCall;

  constructor(call: RecycleBuildingsCall) {
    this._call = call;
  }
}

export class WithdrawAetherCall extends ethereum.Call {
  get inputs(): WithdrawAetherCall__Inputs {
    return new WithdrawAetherCall__Inputs(this);
  }

  get outputs(): WithdrawAetherCall__Outputs {
    return new WithdrawAetherCall__Outputs(this);
  }
}

export class WithdrawAetherCall__Inputs {
  _call: WithdrawAetherCall;

  constructor(call: WithdrawAetherCall) {
    this._call = call;
  }

  get _amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class WithdrawAetherCall__Outputs {
  _call: WithdrawAetherCall;

  constructor(call: WithdrawAetherCall) {
    this._call = call;
  }
}

export class DiamondCutCall extends ethereum.Call {
  get inputs(): DiamondCutCall__Inputs {
    return new DiamondCutCall__Inputs(this);
  }

  get outputs(): DiamondCutCall__Outputs {
    return new DiamondCutCall__Outputs(this);
  }
}

export class DiamondCutCall__Inputs {
  _call: DiamondCutCall;

  constructor(call: DiamondCutCall) {
    this._call = call;
  }

  get _diamondCut(): Array<DiamondCutCall_diamondCutStruct> {
    return this._call.inputValues[0].value.toTupleArray<
      DiamondCutCall_diamondCutStruct
    >();
  }

  get _init(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _calldata(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class DiamondCutCall__Outputs {
  _call: DiamondCutCall;

  constructor(call: DiamondCutCall) {
    this._call = call;
  }
}

export class DiamondCutCall_diamondCutStruct extends ethereum.Tuple {
  get facetAddress(): Address {
    return this[0].toAddress();
  }

  get action(): i32 {
    return this[1].toI32();
  }

  get functionSelectors(): Array<Bytes> {
    return this[2].toBytesArray();
  }
}

export class ResolveAttackCall extends ethereum.Call {
  get inputs(): ResolveAttackCall__Inputs {
    return new ResolveAttackCall__Inputs(this);
  }

  get outputs(): ResolveAttackCall__Outputs {
    return new ResolveAttackCall__Outputs(this);
  }
}

export class ResolveAttackCall__Inputs {
  _call: ResolveAttackCall;

  constructor(call: ResolveAttackCall) {
    this._call = call;
  }

  get _attackInstanceId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ResolveAttackCall__Outputs {
  _call: ResolveAttackCall;

  constructor(call: ResolveAttackCall) {
    this._call = call;
  }
}

export class SendAttackCall extends ethereum.Call {
  get inputs(): SendAttackCall__Inputs {
    return new SendAttackCall__Inputs(this);
  }

  get outputs(): SendAttackCall__Outputs {
    return new SendAttackCall__Outputs(this);
  }
}

export class SendAttackCall__Inputs {
  _call: SendAttackCall;

  constructor(call: SendAttackCall) {
    this._call = call;
  }

  get _fromPlanetId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _toPlanetId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _shipIds(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class SendAttackCall__Outputs {
  _call: SendAttackCall;

  constructor(call: SendAttackCall) {
    this._call = call;
  }
}

export class SendFriendliesCall extends ethereum.Call {
  get inputs(): SendFriendliesCall__Inputs {
    return new SendFriendliesCall__Inputs(this);
  }

  get outputs(): SendFriendliesCall__Outputs {
    return new SendFriendliesCall__Outputs(this);
  }
}

export class SendFriendliesCall__Inputs {
  _call: SendFriendliesCall;

  constructor(call: SendFriendliesCall) {
    this._call = call;
  }

  get _fromPlanetId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _toPlanetId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _shipIds(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class SendFriendliesCall__Outputs {
  _call: SendFriendliesCall;

  constructor(call: SendFriendliesCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get _newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class StartRegisterCall extends ethereum.Call {
  get inputs(): StartRegisterCall__Inputs {
    return new StartRegisterCall__Inputs(this);
  }

  get outputs(): StartRegisterCall__Outputs {
    return new StartRegisterCall__Outputs(this);
  }
}

export class StartRegisterCall__Inputs {
  _call: StartRegisterCall;

  constructor(call: StartRegisterCall) {
    this._call = call;
  }

  get _factionChosen(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _planetTypeChosen(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class StartRegisterCall__Outputs {
  _call: StartRegisterCall;

  constructor(call: StartRegisterCall) {
    this._call = call;
  }
}

export class ClaimFleetCall extends ethereum.Call {
  get inputs(): ClaimFleetCall__Inputs {
    return new ClaimFleetCall__Inputs(this);
  }

  get outputs(): ClaimFleetCall__Outputs {
    return new ClaimFleetCall__Outputs(this);
  }
}

export class ClaimFleetCall__Inputs {
  _call: ClaimFleetCall;

  constructor(call: ClaimFleetCall) {
    this._call = call;
  }

  get _planetId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ClaimFleetCall__Outputs {
  _call: ClaimFleetCall;

  constructor(call: ClaimFleetCall) {
    this._call = call;
  }
}

export class CraftFleetCall extends ethereum.Call {
  get inputs(): CraftFleetCall__Inputs {
    return new CraftFleetCall__Inputs(this);
  }

  get outputs(): CraftFleetCall__Outputs {
    return new CraftFleetCall__Outputs(this);
  }
}

export class CraftFleetCall__Inputs {
  _call: CraftFleetCall;

  constructor(call: CraftFleetCall) {
    this._call = call;
  }

  get _fleetId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _planetId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class CraftFleetCall__Outputs {
  _call: CraftFleetCall;

  constructor(call: CraftFleetCall) {
    this._call = call;
  }
}

export class EndTerraformCall extends ethereum.Call {
  get inputs(): EndTerraformCall__Inputs {
    return new EndTerraformCall__Inputs(this);
  }

  get outputs(): EndTerraformCall__Outputs {
    return new EndTerraformCall__Outputs(this);
  }
}

export class EndTerraformCall__Inputs {
  _call: EndTerraformCall;

  constructor(call: EndTerraformCall) {
    this._call = call;
  }

  get _sendTerraformId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class EndTerraformCall__Outputs {
  _call: EndTerraformCall;

  constructor(call: EndTerraformCall) {
    this._call = call;
  }
}

export class EquipShipModuleCall extends ethereum.Call {
  get inputs(): EquipShipModuleCall__Inputs {
    return new EquipShipModuleCall__Inputs(this);
  }

  get outputs(): EquipShipModuleCall__Outputs {
    return new EquipShipModuleCall__Outputs(this);
  }
}

export class EquipShipModuleCall__Inputs {
  _call: EquipShipModuleCall;

  constructor(call: EquipShipModuleCall) {
    this._call = call;
  }

  get _moduleToEquip(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _shipId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class EquipShipModuleCall__Outputs {
  _call: EquipShipModuleCall;

  constructor(call: EquipShipModuleCall) {
    this._call = call;
  }
}

export class LevelShipCall extends ethereum.Call {
  get inputs(): LevelShipCall__Inputs {
    return new LevelShipCall__Inputs(this);
  }

  get outputs(): LevelShipCall__Outputs {
    return new LevelShipCall__Outputs(this);
  }
}

export class LevelShipCall__Inputs {
  _call: LevelShipCall;

  constructor(call: LevelShipCall) {
    this._call = call;
  }

  get _shipId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class LevelShipCall__Outputs {
  _call: LevelShipCall;

  constructor(call: LevelShipCall) {
    this._call = call;
  }
}

export class ResolveOutMiningCall extends ethereum.Call {
  get inputs(): ResolveOutMiningCall__Inputs {
    return new ResolveOutMiningCall__Inputs(this);
  }

  get outputs(): ResolveOutMiningCall__Outputs {
    return new ResolveOutMiningCall__Outputs(this);
  }
}

export class ResolveOutMiningCall__Inputs {
  _call: ResolveOutMiningCall;

  constructor(call: ResolveOutMiningCall) {
    this._call = call;
  }

  get _outMiningId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ResolveOutMiningCall__Outputs {
  _call: ResolveOutMiningCall;

  constructor(call: ResolveOutMiningCall) {
    this._call = call;
  }
}

export class ResolveSendResourcesCall extends ethereum.Call {
  get inputs(): ResolveSendResourcesCall__Inputs {
    return new ResolveSendResourcesCall__Inputs(this);
  }

  get outputs(): ResolveSendResourcesCall__Outputs {
    return new ResolveSendResourcesCall__Outputs(this);
  }
}

export class ResolveSendResourcesCall__Inputs {
  _call: ResolveSendResourcesCall;

  constructor(call: ResolveSendResourcesCall) {
    this._call = call;
  }

  get _transferResourceId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class ResolveSendResourcesCall__Outputs {
  _call: ResolveSendResourcesCall;

  constructor(call: ResolveSendResourcesCall) {
    this._call = call;
  }
}

export class SendTerraformCall extends ethereum.Call {
  get inputs(): SendTerraformCall__Inputs {
    return new SendTerraformCall__Inputs(this);
  }

  get outputs(): SendTerraformCall__Outputs {
    return new SendTerraformCall__Outputs(this);
  }
}

export class SendTerraformCall__Inputs {
  _call: SendTerraformCall;

  constructor(call: SendTerraformCall) {
    this._call = call;
  }

  get _fromPlanetId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _toPlanetId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _shipIds(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class SendTerraformCall__Outputs {
  _call: SendTerraformCall;

  constructor(call: SendTerraformCall) {
    this._call = call;
  }
}

export class StartOutMiningCall extends ethereum.Call {
  get inputs(): StartOutMiningCall__Inputs {
    return new StartOutMiningCall__Inputs(this);
  }

  get outputs(): StartOutMiningCall__Outputs {
    return new StartOutMiningCall__Outputs(this);
  }
}

export class StartOutMiningCall__Inputs {
  _call: StartOutMiningCall;

  constructor(call: StartOutMiningCall) {
    this._call = call;
  }

  get _fromPlanetId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _toPlanetId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _shipIds(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class StartOutMiningCall__Outputs {
  _call: StartOutMiningCall;

  constructor(call: StartOutMiningCall) {
    this._call = call;
  }
}

export class StartSendResourcesCall extends ethereum.Call {
  get inputs(): StartSendResourcesCall__Inputs {
    return new StartSendResourcesCall__Inputs(this);
  }

  get outputs(): StartSendResourcesCall__Outputs {
    return new StartSendResourcesCall__Outputs(this);
  }
}

export class StartSendResourcesCall__Inputs {
  _call: StartSendResourcesCall;

  constructor(call: StartSendResourcesCall) {
    this._call = call;
  }

  get _fromPlanetId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _toPlanetId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _resourcesToSend(): Array<BigInt> {
    return this._call.inputValues[2].value.toBigIntArray();
  }
}

export class StartSendResourcesCall__Outputs {
  _call: StartSendResourcesCall;

  constructor(call: StartSendResourcesCall) {
    this._call = call;
  }
}

export class SetConfigCall extends ethereum.Call {
  get inputs(): SetConfigCall__Inputs {
    return new SetConfigCall__Inputs(this);
  }

  get outputs(): SetConfigCall__Outputs {
    return new SetConfigCall__Outputs(this);
  }
}

export class SetConfigCall__Inputs {
  _call: SetConfigCall;

  constructor(call: SetConfigCall) {
    this._call = call;
  }

  get _requestConfig(): SetConfigCall_requestConfigStruct {
    return changetype<SetConfigCall_requestConfigStruct>(
      this._call.inputValues[0].value.toTuple()
    );
  }
}

export class SetConfigCall__Outputs {
  _call: SetConfigCall;

  constructor(call: SetConfigCall) {
    this._call = call;
  }
}

export class SetConfigCall_requestConfigStruct extends ethereum.Tuple {
  get subId(): BigInt {
    return this[0].toBigInt();
  }

  get callbackGasLimit(): BigInt {
    return this[1].toBigInt();
  }

  get requestConfirmations(): i32 {
    return this[2].toI32();
  }

  get numWords(): BigInt {
    return this[3].toBigInt();
  }

  get keyHash(): Bytes {
    return this[4].toBytes();
  }
}

export class SetVRFAddressesCall extends ethereum.Call {
  get inputs(): SetVRFAddressesCall__Inputs {
    return new SetVRFAddressesCall__Inputs(this);
  }

  get outputs(): SetVRFAddressesCall__Outputs {
    return new SetVRFAddressesCall__Outputs(this);
  }
}

export class SetVRFAddressesCall__Inputs {
  _call: SetVRFAddressesCall;

  constructor(call: SetVRFAddressesCall) {
    this._call = call;
  }

  get _vrfCoordinator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _linkAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class SetVRFAddressesCall__Outputs {
  _call: SetVRFAddressesCall;

  constructor(call: SetVRFAddressesCall) {
    this._call = call;
  }
}

export class SubscribeCall extends ethereum.Call {
  get inputs(): SubscribeCall__Inputs {
    return new SubscribeCall__Inputs(this);
  }

  get outputs(): SubscribeCall__Outputs {
    return new SubscribeCall__Outputs(this);
  }
}

export class SubscribeCall__Inputs {
  _call: SubscribeCall;

  constructor(call: SubscribeCall) {
    this._call = call;
  }
}

export class SubscribeCall__Outputs {
  _call: SubscribeCall;

  constructor(call: SubscribeCall) {
    this._call = call;
  }
}

export class TopUpSubscriptionCall extends ethereum.Call {
  get inputs(): TopUpSubscriptionCall__Inputs {
    return new TopUpSubscriptionCall__Inputs(this);
  }

  get outputs(): TopUpSubscriptionCall__Outputs {
    return new TopUpSubscriptionCall__Outputs(this);
  }
}

export class TopUpSubscriptionCall__Inputs {
  _call: TopUpSubscriptionCall;

  constructor(call: TopUpSubscriptionCall) {
    this._call = call;
  }

  get amount(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class TopUpSubscriptionCall__Outputs {
  _call: TopUpSubscriptionCall;

  constructor(call: TopUpSubscriptionCall) {
    this._call = call;
  }
}
